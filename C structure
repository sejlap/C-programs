#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define epsilon 0.001
struct Tacka {
	double x,y;
};
struct Kruznica {
	struct Tacka centar;
	double poluprecnik;
};
struct Kvadrat {
	struct Tacka dl;
	double stranica;
};

int izbaci_visak(struct Kruznica* kr, int velkr, struct Kvadrat* kv, int velkv){
	int i=0,j=0,izbaci=0, k=0,bio=0;
	for(i=0; i<velkv; i++) {
		izbaci=0;
		if(velkr==0) velkv=0;
		float duzina=0;
		duzina = kv[i].stranica * sqrt(2); //dijagonala kvadrata ili krajnja tacka kvadrata
		bio=0;
		for(j=0; j<velkr; j++) {
			if(kv[i].dl.x>=kr[j].centar.x &&  kv[i].dl.y>=kr[j].centar.y && kr[j].poluprecnik<duzina //tacke kvadrata trebaju biti unutar centra kruga
		||	(kv[i].dl.x>kr[j].centar.x &&  kv[i].dl.y>kr[j].centar.y && kr[j].poluprecnik<duzina+0.1))	{	
			   izbaci=1;
				break;
			}
			double tacka=sqrt(((kv[i].dl.x-kr[j].centar.x) * (kv[i].dl.x-kr[j].centar.x)) - ((kv[i].dl.y-kr[j].centar.y) * (kv[i].dl.y-kr[j].centar.y)));
			if(tacka>kr[j].poluprecnik) { //duzina udaljenosti od kvadrata i kruga treba biti unutar poluprecnika
				izbaci=1;
				break;
			}
		}
		if(izbaci) { 
			for(k=i; k<velkv-1; k++) //izbacivanje
				kv[k]=kv[k+1];
			velkv--;
			i--;
		}
	}
	return velkv;
}
int main()
{

	return 0;
}
